-- file.tsx --
~~ lineWidth: 50, jsx.multiLineParens: never ~~
== should format when single line ==
const t = <>  Testing this out  </>;

[expect]
const t = <>Testing this out</>;

== should format when multi line ==
const t = <>
        Testing

some text


that has many blank lines
and a single line
    </>;

[expect]
const t = <>
    Testing

    some text

    that has many blank lines and a single line
</>;

== should keep character entities ==
const t = <span>&nbsp;|&nbsp;</span>;

[expect]
const t = <span>&nbsp;|&nbsp;</span>;

== should wrap a single line to multiple lines ==
const t = <>
    Here is some text that will exceed the line width, but will be wrapped because of it.
</>;

[expect]
const t = <>
    Here is some text that will exceed the line
    width, but will be wrapped because of it.
</>;

== should maintain text for pre element ==
const t = <pre>
    &lt;p&gt;
        &lt;span&gt;This is some text.&lt;/span&gt;
    &lt;/p&gt;
</pre>;

[expect]
const t = <pre>
    &lt;p&gt;
        &lt;span&gt;This is some text.&lt;/span&gt;
    &lt;/p&gt;
</pre>;

== should maintain pre element text when has nested element as well ==
const t = <pre>
  <code className="language-html">
    &lt;p&gt; &lt;span&gt;This is some text.&lt;/span&gt; &lt;/p&gt;
            </code>
</pre>;

[expect]
const t = <pre>
  <code className="language-html">
    &lt;p&gt; &lt;span&gt;This is some text.&lt;/span&gt; &lt;/p&gt;
            </code>
</pre>;
